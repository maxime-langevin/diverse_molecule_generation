nohup: ignoring input
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.571 s, score: 41.343 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 3.930 s, score: 39.168 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 3 --- timings: sample: 4.006 s, score: 35.303 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Generation 4 --- timings: sample: 4.012 s, score: 33.003 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Generation 5 --- timings: sample: 3.855 s, score: 35.843 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_13:18:50
Optimization time 336.4404637813568
Statistics time 5.050016641616821
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.981 s, score: 48.866 s, finetune: 0.332 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 4.178 s, score: 42.471 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 3 --- timings: sample: 4.226 s, score: 39.140 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 4 --- timings: sample: 3.932 s, score: 36.978 s, finetune: 0.294 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 5 --- timings: sample: 4.021 s, score: 37.228 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_13:24:55
Optimization time 346.7839286327362
Statistics time 5.521778583526611
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.046 s, score: 44.099 s, finetune: 0.288 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 4.866 s, score: 43.801 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 3 --- timings: sample: 4.141 s, score: 38.371 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 4 --- timings: sample: 4.019 s, score: 35.889 s, finetune: 0.283 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 5 --- timings: sample: 4.064 s, score: 37.254 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_13:31:10
Optimization time 337.5337452888489
Statistics time 5.333399295806885
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.966 s, score: 41.685 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 3.981 s, score: 41.745 s, finetune: 0.483 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Generation 3 --- timings: sample: 4.066 s, score: 38.534 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 4 --- timings: sample: 3.980 s, score: 36.977 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 5 --- timings: sample: 3.991 s, score: 34.700 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_13:37:15
Optimization time 332.99932956695557
Statistics time 5.3874430656433105
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.944 s, score: 42.845 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 3.909 s, score: 42.553 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 3 --- timings: sample: 3.980 s, score: 37.771 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 4 --- timings: sample: 3.982 s, score: 36.747 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Generation 5 --- timings: sample: 4.014 s, score: 34.790 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_13:43:16
Optimization time 330.7536413669586
Statistics time 5.205883979797363
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.092 s, score: 42.692 s, finetune: 0.295 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Generation 2 --- timings: sample: 4.006 s, score: 42.155 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 3 --- timings: sample: 3.919 s, score: 37.024 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 4 --- timings: sample: 4.093 s, score: 38.112 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Generation 5 --- timings: sample: 3.911 s, score: 38.146 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_13:49:14
Optimization time 337.72855162620544
Statistics time 5.202694654464722
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.013 s, score: 42.797 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 2 --- timings: sample: 4.406 s, score: 44.832 s, finetune: 0.314 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 3 --- timings: sample: 3.944 s, score: 37.800 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 4 --- timings: sample: 3.982 s, score: 36.491 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Generation 5 --- timings: sample: 4.025 s, score: 34.621 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_13:55:19
Optimization time 334.9067771434784
Statistics time 4.967265367507935
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.947 s, score: 46.023 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 3.945 s, score: 42.330 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 3 --- timings: sample: 3.967 s, score: 38.303 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Generation 4 --- timings: sample: 3.909 s, score: 36.142 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Generation 5 --- timings: sample: 4.009 s, score: 34.213 s, finetune: 0.284 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_14:01:21
Optimization time 333.6793546676636
Statistics time 5.213119268417358
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.236 s, score: 42.847 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 5.388 s, score: 42.447 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 3 --- timings: sample: 3.973 s, score: 38.629 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Generation 4 --- timings: sample: 3.988 s, score: 36.698 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Generation 5 --- timings: sample: 3.984 s, score: 32.714 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_14:07:22
Optimization time 332.7289083003998
Statistics time 5.693659067153931
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.050 s, score: 43.233 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 2 --- timings: sample: 4.015 s, score: 42.272 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Generation 3 --- timings: sample: 4.033 s, score: 38.585 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Generation 4 --- timings: sample: 4.015 s, score: 37.504 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Generation 5 --- timings: sample: 4.110 s, score: 36.085 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 0_threshold_0.7/2024-08-06_14:13:24
Optimization time 335.48880434036255
Statistics time 5.687082529067993
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.986 s, score: 43.219 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 2 --- timings: sample: 3.960 s, score: 41.973 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(Cl)c2[nH]1
Generation 3 --- timings: sample: 4.044 s, score: 37.777 s, finetune: 0.284 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 4 --- timings: sample: 3.907 s, score: 37.778 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 5 --- timings: sample: 4.082 s, score: 35.327 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnon4)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_14:19:27
Optimization time 334.7188310623169
Statistics time 5.050305366516113
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.932 s, score: 42.476 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccc3ocnc3c1)CC2
Generation 2 --- timings: sample: 3.991 s, score: 45.693 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccc3ocnc3c1)CC2
Generation 3 --- timings: sample: 3.903 s, score: 39.301 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 4 --- timings: sample: 3.988 s, score: 37.048 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 5 --- timings: sample: 3.887 s, score: 34.766 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(F)c2[nH]1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_14:25:29
Optimization time 335.4629809856415
Statistics time 5.120546340942383
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.946 s, score: 44.507 s, finetune: 0.289 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 2 --- timings: sample: 4.033 s, score: 42.159 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 3 --- timings: sample: 4.082 s, score: 39.079 s, finetune: 0.280 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 4 --- timings: sample: 4.006 s, score: 39.166 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 5 --- timings: sample: 4.018 s, score: 35.823 s, finetune: 0.286 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc(F)c(Cl)c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccccc1)CC2
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(Cl)c2[nH]1
	0.990: Oc1cc2c(OCCNCc3cccc(-c4ccccc4)c3)ccc(F)c2[nH]1
	0.990: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCCCCC5)CC3)cc12
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_14:31:32
Optimization time 339.22706484794617
Statistics time 5.2895166873931885
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.910 s, score: 42.570 s, finetune: 0.282 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 2 --- timings: sample: 3.898 s, score: 42.487 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccc3ocnc3c1)CC2
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(F)c2[nH]1
Generation 3 --- timings: sample: 4.100 s, score: 39.614 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 4 --- timings: sample: 3.965 s, score: 36.787 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1Cl
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 5 --- timings: sample: 3.919 s, score: 34.172 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_14:37:38
Optimization time 331.8541762828827
Statistics time 5.7755677700042725
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.944 s, score: 43.563 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 2 --- timings: sample: 4.084 s, score: 41.911 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 4.004 s, score: 41.760 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 4 --- timings: sample: 3.880 s, score: 37.173 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc(F)c(Cl)c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCCC5)CC3)nc2N1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
Generation 5 --- timings: sample: 3.913 s, score: 35.192 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc(F)c(Cl)c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.992: CCCN1CC(Cn2cc(Cl)cn2)OC2Cc3c(O)cccc3CC21
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_14:43:37
Optimization time 333.342791557312
Statistics time 5.294689416885376
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.049 s, score: 42.083 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 2 --- timings: sample: 3.994 s, score: 42.324 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccc3ocnc3c1)CC2
Generation 3 --- timings: sample: 4.064 s, score: 38.689 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 4.018 s, score: 38.552 s, finetune: 0.339 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 5 --- timings: sample: 4.029 s, score: 34.639 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_14:49:39
Optimization time 335.61874127388
Statistics time 5.136384963989258
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.978 s, score: 41.898 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
Generation 2 --- timings: sample: 3.932 s, score: 41.936 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccc3ocnc3c1)CC2
Generation 3 --- timings: sample: 4.081 s, score: 40.883 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.991 s, score: 36.756 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 5 --- timings: sample: 3.994 s, score: 34.443 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(F)c2[nH]1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_14:55:43
Optimization time 332.2132411003113
Statistics time 5.001523733139038
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.960 s, score: 42.431 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 3.971 s, score: 44.704 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)CN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 3 --- timings: sample: 3.933 s, score: 37.745 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 4 --- timings: sample: 5.097 s, score: 36.323 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
Generation 5 --- timings: sample: 4.005 s, score: 35.038 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1CC(Cn2cc(Cl)cn2)OC2Cc3c(O)cccc3CC21
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_15:01:42
Optimization time 335.84040665626526
Statistics time 5.554585695266724
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.972 s, score: 42.676 s, finetune: 0.298 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 2 --- timings: sample: 4.030 s, score: 43.480 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Generation 3 --- timings: sample: 3.945 s, score: 39.871 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.939 s, score: 39.097 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 5 --- timings: sample: 3.985 s, score: 34.856 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_15:07:45
Optimization time 337.0876362323761
Statistics time 5.058215379714966
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.998 s, score: 42.910 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 2 --- timings: sample: 4.042 s, score: 41.640 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 3 --- timings: sample: 3.984 s, score: 41.486 s, finetune: 0.283 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
Generation 4 --- timings: sample: 3.944 s, score: 38.830 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 5 --- timings: sample: 3.915 s, score: 35.641 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1_threshold_0.7/2024-08-06_15:13:49
Optimization time 336.1960480213165
Statistics time 4.9144065380096436
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.987 s, score: 43.069 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 3.967 s, score: 41.296 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 3 --- timings: sample: 3.913 s, score: 38.774 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.943 s, score: 36.869 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 5 --- timings: sample: 5.073 s, score: 37.011 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_15:19:52
Optimization time 337.5231075286865
Statistics time 5.906007289886475
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.900 s, score: 43.008 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)CN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 2 --- timings: sample: 3.937 s, score: 42.539 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 3 --- timings: sample: 3.958 s, score: 41.942 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
Generation 4 --- timings: sample: 3.988 s, score: 39.538 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
Generation 5 --- timings: sample: 3.939 s, score: 36.878 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_15:25:57
Optimization time 340.1379723548889
Statistics time 5.1375627517700195
finetuning with 5384 molecules for 1 epochs
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Generation 1 --- timings: sample: 3.958 s, score: 43.246 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 4.073 s, score: 44.832 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
Generation 3 --- timings: sample: 4.070 s, score: 38.542 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Generation 4 --- timings: sample: 3.955 s, score: 38.821 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 5 --- timings: sample: 4.064 s, score: 37.699 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Best selected:
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccc3ocnc3c1)CC2
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_15:32:06
Optimization time 339.1598699092865
Statistics time 5.566602468490601
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.954 s, score: 43.049 s, finetune: 0.292 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Generation 2 --- timings: sample: 4.051 s, score: 42.138 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 3 --- timings: sample: 4.009 s, score: 40.246 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 4 --- timings: sample: 3.946 s, score: 38.094 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 5 --- timings: sample: 5.113 s, score: 36.553 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1I
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1CC(Cn2cc(Cl)cn2)OC2Cc3c(O)cccc3CC21
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_15:38:12
Optimization time 338.3571095466614
Statistics time 5.049361705780029
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.978 s, score: 43.253 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)CN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 2 --- timings: sample: 4.080 s, score: 42.335 s, finetune: 0.286 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 3.876 s, score: 40.233 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.955 s, score: 40.339 s, finetune: 0.282 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 5 --- timings: sample: 3.973 s, score: 35.165 s, finetune: 0.288 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_15:44:18
Optimization time 341.34441590309143
Statistics time 4.903996229171753
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.027 s, score: 43.304 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 4.067 s, score: 43.621 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(F)c2[nH]1
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(Cl)c2[nH]1
Generation 3 --- timings: sample: 3.878 s, score: 39.238 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 4.012 s, score: 37.812 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.995: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 5 --- timings: sample: 4.079 s, score: 39.090 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc(F)c(Cl)c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.992: CCCN1CC(Cn2cc(Cl)cn2)OC2Cc3c(O)cccc3CC21
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_15:50:27
Optimization time 340.1343424320221
Statistics time 5.004047632217407
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.951 s, score: 43.088 s, finetune: 0.287 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 2 --- timings: sample: 3.899 s, score: 41.481 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 3.961 s, score: 39.836 s, finetune: 0.286 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 4 --- timings: sample: 4.101 s, score: 38.878 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 5 --- timings: sample: 3.853 s, score: 37.275 s, finetune: 0.286 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_15:56:35
Optimization time 336.94186663627625
Statistics time 5.416942834854126
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 5.268 s, score: 42.607 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Generation 2 --- timings: sample: 4.010 s, score: 41.543 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 3 --- timings: sample: 4.058 s, score: 38.231 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.981 s, score: 37.551 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 5 --- timings: sample: 3.963 s, score: 37.438 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_16:02:39
Optimization time 338.1217668056488
Statistics time 5.14749550819397
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.063 s, score: 41.904 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 2 --- timings: sample: 4.044 s, score: 45.114 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 3 --- timings: sample: 3.942 s, score: 40.017 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	0.990: Oc1cc2c(OCCNCc3ccsc3)ccc(F)c2[nH]1
Generation 4 --- timings: sample: 3.944 s, score: 38.367 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 5 --- timings: sample: 4.175 s, score: 38.023 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_16:08:45
Optimization time 340.36810636520386
Statistics time 5.597109317779541
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.052 s, score: 43.238 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
Generation 2 --- timings: sample: 3.959 s, score: 43.608 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 3 --- timings: sample: 4.027 s, score: 39.978 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	0.995: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 4 --- timings: sample: 3.961 s, score: 38.926 s, finetune: 0.287 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	0.995: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.990: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCCCC5)CC3)cc12
Generation 5 --- timings: sample: 3.934 s, score: 36.897 s, finetune: 0.282 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 10_threshold_0.7/2024-08-06_16:14:53
Optimization time 342.1227538585663
Statistics time 4.962210178375244
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.964 s, score: 43.010 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 2 --- timings: sample: 4.137 s, score: 44.076 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
Generation 3 --- timings: sample: 3.878 s, score: 41.404 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 4 --- timings: sample: 3.954 s, score: 40.538 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 5 --- timings: sample: 3.937 s, score: 39.248 s, finetune: 0.286 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_16:21:03
Optimization time 345.6377823352814
Statistics time 5.164164304733276
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.913 s, score: 45.370 s, finetune: 0.283 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Generation 2 --- timings: sample: 4.011 s, score: 42.864 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 3.888 s, score: 41.353 s, finetune: 0.291 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.935 s, score: 40.281 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.992: CCCN1CC(Cn2cc(Cl)cn2)OC2Cc3c(O)cccc3CC21
	0.990: Oc1ccc2c(c1)OC(CNCCCOc1ccccc1)CC2
Generation 5 --- timings: sample: 3.940 s, score: 40.716 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_16:27:15
Optimization time 347.80901408195496
Statistics time 5.1452577114105225
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.960 s, score: 43.725 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 2 --- timings: sample: 3.993 s, score: 43.098 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 3 --- timings: sample: 3.973 s, score: 41.682 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 4.032 s, score: 42.801 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 5 --- timings: sample: 3.893 s, score: 39.195 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_16:33:29
Optimization time 348.4592835903168
Statistics time 5.037851333618164
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.977 s, score: 41.528 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 2 --- timings: sample: 4.002 s, score: 40.992 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 3 --- timings: sample: 3.970 s, score: 42.732 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 4 --- timings: sample: 4.062 s, score: 40.539 s, finetune: 0.283 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 5 --- timings: sample: 3.899 s, score: 39.035 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_16:39:45
Optimization time 341.6552791595459
Statistics time 5.433071851730347
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.973 s, score: 42.566 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 2 --- timings: sample: 4.048 s, score: 41.969 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 3 --- timings: sample: 3.926 s, score: 41.036 s, finetune: 0.290 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
Generation 4 --- timings: sample: 4.001 s, score: 41.702 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 5 --- timings: sample: 4.015 s, score: 39.232 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_16:45:54
Optimization time 346.4075331687927
Statistics time 5.094001770019531
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.028 s, score: 43.080 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 3.944 s, score: 42.561 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 3 --- timings: sample: 4.050 s, score: 43.216 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 4 --- timings: sample: 3.997 s, score: 39.949 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Generation 5 --- timings: sample: 4.039 s, score: 40.090 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_16:52:07
Optimization time 345.46804642677307
Statistics time 5.253735303878784
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.978 s, score: 42.521 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 2 --- timings: sample: 3.992 s, score: 42.123 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 3.963 s, score: 40.919 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 4 --- timings: sample: 4.124 s, score: 39.315 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 5 --- timings: sample: 3.963 s, score: 39.055 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_16:58:20
Optimization time 341.83054661750793
Statistics time 4.990724086761475
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.114 s, score: 41.954 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Generation 2 --- timings: sample: 3.981 s, score: 41.958 s, finetune: 0.287 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Generation 3 --- timings: sample: 3.914 s, score: 39.644 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
Generation 4 --- timings: sample: 3.850 s, score: 38.782 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 5 --- timings: sample: 3.926 s, score: 38.081 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_17:04:31
Optimization time 335.52122020721436
Statistics time 4.8069376945495605
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.007 s, score: 42.000 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 2 --- timings: sample: 3.947 s, score: 42.876 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 3 --- timings: sample: 3.896 s, score: 40.151 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 4 --- timings: sample: 3.886 s, score: 40.282 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccc(F)cc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 5 --- timings: sample: 3.992 s, score: 39.033 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_17:10:32
Optimization time 339.8562545776367
Statistics time 5.04282021522522
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.035 s, score: 42.784 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 4.005 s, score: 42.325 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 3 --- timings: sample: 3.940 s, score: 41.615 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 4 --- timings: sample: 3.980 s, score: 40.757 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 5 --- timings: sample: 4.006 s, score: 39.663 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 100_threshold_0.7/2024-08-06_17:16:38
Optimization time 342.40312361717224
Statistics time 4.874317169189453
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.001 s, score: 42.098 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 2 --- timings: sample: 3.954 s, score: 41.399 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 3 --- timings: sample: 3.973 s, score: 41.091 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.960 s, score: 40.192 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(Cc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
Generation 5 --- timings: sample: 3.976 s, score: 38.974 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_17:22:46
Optimization time 337.9871644973755
Statistics time 5.003991603851318
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.861 s, score: 43.284 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 2 --- timings: sample: 4.076 s, score: 42.444 s, finetune: 0.284 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)CN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
Generation 3 --- timings: sample: 3.960 s, score: 41.953 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 4 --- timings: sample: 3.919 s, score: 40.278 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 5 --- timings: sample: 3.877 s, score: 40.020 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_17:28:50
Optimization time 342.34647822380066
Statistics time 5.224529504776001
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.925 s, score: 43.172 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CC(C)CN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
Generation 2 --- timings: sample: 4.071 s, score: 42.323 s, finetune: 0.285 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 3 --- timings: sample: 4.130 s, score: 41.372 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
Generation 4 --- timings: sample: 3.940 s, score: 40.215 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
Generation 5 --- timings: sample: 4.049 s, score: 39.794 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_17:34:59
Optimization time 340.3829505443573
Statistics time 5.149618625640869
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.021 s, score: 41.511 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 2 --- timings: sample: 3.963 s, score: 40.849 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 3 --- timings: sample: 3.961 s, score: 41.354 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 4 --- timings: sample: 3.991 s, score: 39.762 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Generation 5 --- timings: sample: 3.961 s, score: 38.803 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
	1.000: CC(C)C(=O)NCc1ccc2c(c1)C(N1CCN(C)CC1)Cc1ccccc1S2
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_17:41:06
Optimization time 336.3675923347473
Statistics time 4.920425176620483
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.980 s, score: 42.408 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 3.933 s, score: 42.245 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 3.855 s, score: 40.949 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)CN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 4 --- timings: sample: 3.961 s, score: 41.185 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 5 --- timings: sample: 3.960 s, score: 39.184 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_17:47:08
Optimization time 340.8773820400238
Statistics time 4.830547571182251
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.947 s, score: 42.281 s, finetune: 0.283 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
Generation 2 --- timings: sample: 3.956 s, score: 42.351 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 4.028 s, score: 41.017 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
Generation 4 --- timings: sample: 4.035 s, score: 38.917 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
Generation 5 --- timings: sample: 3.911 s, score: 38.159 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2ccc(Cl)cc2c1
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CN1CCCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_17:53:15
Optimization time 337.07492113113403
Statistics time 4.838136911392212
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.093 s, score: 42.787 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 2 --- timings: sample: 4.003 s, score: 41.225 s, finetune: 0.281 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 3.880 s, score: 40.835 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 4 --- timings: sample: 3.911 s, score: 38.983 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 5 --- timings: sample: 3.920 s, score: 39.391 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_17:59:17
Optimization time 337.94672179222107
Statistics time 4.878976345062256
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.015 s, score: 42.370 s, finetune: 0.287 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cnn(C)c4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
Generation 2 --- timings: sample: 3.925 s, score: 41.097 s, finetune: 0.291 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 3 --- timings: sample: 3.964 s, score: 41.383 s, finetune: 0.286 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 4 --- timings: sample: 3.904 s, score: 39.281 s, finetune: 0.283 s
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)c4)cc32)CC1
Generation 5 --- timings: sample: 4.013 s, score: 39.656 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCOc1ccc3oc(O)nc3c1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccc(-c3ccccc3)cc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_18:05:22
Optimization time 336.5642931461334
Statistics time 5.100065231323242
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 4.152 s, score: 42.386 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 2 --- timings: sample: 3.965 s, score: 41.881 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 3 --- timings: sample: 3.927 s, score: 40.882 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 4 --- timings: sample: 3.931 s, score: 39.875 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cccc(OCCCNCC2CCc3ccc(O)cc3O2)c1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Generation 5 --- timings: sample: 3.969 s, score: 39.577 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
/common/workdir/diverse_molecule_generation/diverse_guacamol_baselines/smiles_lstm_hc/rnn_utils.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_weights, map_location))
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
	0.995: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccnn4C)cc32)CC1
	0.992: CCCN1C[C@@H](Cn2cc(Cl)cn2)O[C@@H]2Cc3c(O)cccc3C[C@H]21
	0.992: CCCN1CC(Cn2cc(Cl)cn2)OC2Cc3c(O)cccc3CC21
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_18:11:25
Optimization time 338.8695614337921
Statistics time 5.059152364730835
finetuning with 5384 molecules for 1 epochs
Generation 1 --- timings: sample: 3.996 s, score: 42.999 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 2 --- timings: sample: 4.008 s, score: 42.954 s, finetune: 0.282 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc(Cl)c4F)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2[nH]cc(CCCN3CCN(c4cccc5c4OCCO5)CC3)c2c1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
Generation 3 --- timings: sample: 3.932 s, score: 40.195 s, finetune: 0.286 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Clc1ccc2c(CCCN3CCN(c4cccc5c4OCCO5)CC3)c[nH]c2c1
	1.000: Cc1ccc(-c2ccc3c(c2)C(N2CCN(C)CC2)Cc2ccccc2S3)cc1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 4 --- timings: sample: 3.915 s, score: 39.861 s, finetune: 0.284 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
	1.000: O=C1CCc2ccc(OCCCCN3CCCN(c4cccc(Cl)c4Cl)CC3)nc2N1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4nnn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
	1.000: CCCCCN1CN(c2ccccc2)C2(CCN(CCCC(=O)c3ccc(F)cc3)CC2)C1=O
	1.000: CC(C)c1ccccc1N1CCN(Cc2ccc(CN3CCCCCC3=O)n2C)CC1
	1.000: CC(C)C(=O)NCc1ccc2c(c1)[C@@H](N1CCN(C)CC1)Cc1ccccc1S2
Generation 5 --- timings: sample: 3.970 s, score: 38.354 s, finetune: 0.283 s
Best optimized:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: Oc1[nH]cc2ccc(OCCCCN3CCN(c4cccc5c4CCC5)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCN3CCN(c4cccc5cccc(F)c45)CC3)cc12
	1.000: Oc1[nH]cc2cc(F)c(OCCCCN3CCN(c4cccc5cc(F)ccc45)CC3)cc12
	1.000: O=S(=O)(NCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc2cc(Cl)ccc2c1
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C1CCc2ccc(OCCCCN3CCN(c4cccc5c4CCCC5)CC3)nc2N1
Best selected:
	1.000: Oc1nc2cccc(N3CCN(Cc4cccc(-c5ccccc5)c4)CC3)c2o1
	1.000: Oc1ccc2c(c1)O[C@@H](CNCCCCc1ccccc1)CC2
	1.000: Oc1ccc2c(c1)OC(CNCCCCc1ccccc1)CC2
	1.000: O=S(=O)(NCCCCN1CCC(c2noc3cc(F)ccc23)CC1)c1ccc(F)c(Cl)c1
	1.000: O=C(CCCN1CCC2(CC1)C(=O)N(CCc1ccccc1)CN2c1ccccc1)c1ccc(F)cc1
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CC[C@@H]2[C@H](C1)c1cccc3c1N2CCCS3
	1.000: Nc1cc(F)ccc1C(=O)CCCN1CCC2C(C1)c1cccc3c1N2CCCS3
	1.000: Cc1ccc(OCCCNCC2CCc3ccc(O)cc3O2)cc1N
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4ccn(C)n4)cc32)CC1
	1.000: CN1CCN(C2Cc3ccccc3Sc3ccc(-c4cccnc4)cc32)CC1
Storing results in results/lstm_hc/drd2_cleaned/ecfp4_range_physchem_range_ecfp4_counts_beta_ 1000_threshold_0.7/2024-08-06_18:17:30
Optimization time 338.7389464378357
Statistics time 4.858537673950195
